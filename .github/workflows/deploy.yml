name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'streamlit_ui/app.py'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 현재 Actions public IP 가져오기
      - name: Get Github Actions IP
        id: ip
        uses: haythem/public-ip@v1.2

      # 2️⃣ AWS CLI용 자격 증명 설정
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 3️⃣ 보안 그룹에 현재 Actions IP 임시 허용
      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.AWS_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32

      # 4️⃣ SSH 접속 후 명령 실행
      - name: SSH Commands
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_SSH_PORT }}
          script_stop: true
          script: |
            cd /home/ubuntu/mlops-cloud-project-mlops-4
            git pull origin main
            cd /home/ubuntu/mlops-cloud-project-mlops-4/streamlit_ui

            docker stop bitcoin-ui || true
            docker rm bitcoin-ui || true

            sudo lsof -ti:80 | xargs sudo kill -9 || true
            sudo netstat -tlnp | grep :80 | awk '{print $7}' | cut -d'/' -f1 | xargs sudo kill -9 || true
            
            sleep 3
            
            docker ps --format "table {{.ID}}\t{{.Ports}}" | grep "0.0.0.0:80" | awk '{print $1}' | xargs docker stop || true

            LATEST_TAG=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep bitcoin-ui | sort -V | tail -n1 | awk -F':' '{print $2}')

            if [ -z "$LATEST_TAG" ]; then
                NEXT_TAG="v1"
            else
                NUM=$(echo $LATEST_TAG | sed 's/v//')
                NEXT_NUM=$((NUM+1))
                NEXT_TAG="v$NEXT_NUM"
            fi

            echo "Building new image: bitcoin-ui-${NEXT_TAG}"

            docker build -t bitcoin-ui-${NEXT_TAG} .
            docker run -d -p 80:8501 --name bitcoin-ui bitcoin-ui-${NEXT_TAG}


      # 5️⃣ 보안 그룹에서 Actions IP 제거
      - name: Remove Github Actions IP From Security Group
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.AWS_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
