services:
  postgres:
    image: postgres:15
    container_name: mlflow-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 3s
      retries: 10
  mlflow:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
        AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
        AWS_BUCKET: ${AWS_BUCKET}
        MLFLOW_BACKEND_STORE_URI: ${MLFLOW_BACKEND_STORE_URI}
    image: mlflow-server:v1
    container_name: mlflow-server
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${MLFLOW_PORT}:5000"
    healthcheck:
      test: [ "CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:${MLFLOW_PORT}/health')" ]
      interval: 10s
      timeout: 5s
      retries: 30
networks:
  default:
    name: mlflow-network
